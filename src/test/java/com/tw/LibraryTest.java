package com.tw;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import org.junit.Before;
import org.junit.Test;
import junit.framework.TestCase;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.lang.reflect.Array;
import java.util.*;

import static org.junit.Assert.*;
import static org.mockito.Mockito.mock;


public class LibraryTest {
    Student student1;
//    private ByteArrayOutputStream outContent = new ByteArrayOutputStream();

//    @Before
//    public void setup() {
//        HashMap<String, Integer> score = new HashMap<>();
//        score.put("数学", 90);
//        score.put("语文", 90);
//        score.put("英语", 90);
//        score.put("编程", 90);
//        student1 = new Student("Tom",0,score);
//    }
//    @Test
//    public void testAddNewStudent() {
//        Library scoreSheet = new Library();
//        assertTrue("add a new student should return 'true'", scoreSheet.addStudent(student1));
//    }
//
//    @Test
//    public void testAddNewStudent_but_the_student_exist() {
//        HashMap<String, Integer> score = new HashMap<>();
//        score.put("数学", 100);
//        score.put("语文", 90);
//        score.put("英语", 90);
//        score.put("编程", 90);
//        Library scoreSheet = new Library();
//        assertTrue("add a new student should return 'false'", scoreSheet.addStudent(new Student("Tom",0,score)));
//    }
//
//    @Test
//    public void test_all_mean_scores() {
//        HashMap<String, Integer> score = new HashMap<>();
//        score.put("数学", 100);
//        score.put("语文", 90);
//        score.put("英语", 90);
//        score.put("编程", 90);
//        Library scoreSheet = new Library();
//        List<String> subjectNames = Arrays.asList(new String[]{"数学","语文","英语","编程"});
//        scoreSheet.addStudent(new Student("Lily",1,score));
//        scoreSheet.addStudent(student1);
//        List<Double> result = Arrays.asList(new Double[]{95.0, 90.0, 90.0, 90.0});
//        TestCase.assertEquals(scoreSheet.allMeanScore(subjectNames),result);
//    }
//
//    @Test
//    public void test_all_median_scores_evenStudent() {
//        HashMap<String, Integer> score = new HashMap<>();
//        score.put("数学", 100);
//        score.put("语文", 90);
//        score.put("英语", 90);
//        score.put("编程", 90);
//        Library scoreSheet = new Library();
//        List<String> subjectNames = Arrays.asList(new String[]{"数学","语文","英语","编程"});
//        scoreSheet.addStudent(new Student("Lily",1,score));
//        scoreSheet.addStudent(student1);
//        List<Double> result = Arrays.asList(new Double[]{95.0, 90.0, 90.0, 90.0});
//        TestCase.assertEquals(scoreSheet.allMedianScore(subjectNames),result);
//    }
//
//    @Test
//    public void test_all_median_scores_oddStudent() {
//        HashMap<String, Integer> score = new HashMap<>();
//        score.put("数学", 100);
//        score.put("语文", 90);
//        score.put("英语", 90);
//        score.put("编程", 90);
//
//        HashMap<String, Integer> score2 = new HashMap<>();
//        score2.put("数学", 100);
//        score2.put("语文", 90);
//        score2.put("英语", 90);
//        score2.put("编程", 90);
//
//        Library scoreSheet = new Library();
//        List<String> subjectNames = Arrays.asList(new String[]{"数学","语文","英语","编程"});
//        scoreSheet.addStudent(new Student("Lily",1,score));
//        scoreSheet.addStudent(new Student("Li",2,score2));
//        scoreSheet.addStudent(student1);
//        List<Double> result = Arrays.asList(new Double[]{100.0, 90.0, 90.0, 90.0});
//        TestCase.assertEquals(scoreSheet.allMedianScore(subjectNames),result);
//    }
//
//    private String systemOut() {
//        return outContent.toString();
//    }
//
//    @Test
//    public void test_print_some_student_scores() {
//        System.setOut(new PrintStream(outContent));
//
//        HashMap<String, Integer> score = new HashMap<>();
//        score.put("数学", 100);
//        score.put("语文", 90);
//        score.put("英语", 90);
//        score.put("编程", 90);
//
//        HashMap<String, Integer> score2 = new HashMap<>();
//        score2.put("数学", 100);
//        score2.put("语文", 90);
//        score2.put("英语", 90);
//        score2.put("编程", 90);
//
//        Library scoreSheet = new Library();
//        scoreSheet.addStudent(new Student("Lily",1,score));
//        scoreSheet.addStudent(new Student("Li",2,score2));
//        scoreSheet.addStudent(student1);
//        ArrayList<Integer> ids = new ArrayList<>(Arrays.asList(0,3));
//        scoreSheet.printScoreSheet(ids);
//        TestCase.assertEquals(systemOut(),"成绩单\n姓名|数学|语文|英语|编程|平均分|总分\n========================\nTom|90|90|90|90|90.0|360\n" +
//                "========================\n全班总分平均数：366.0\n全班总分中位数：370.0");
//    }
//
//    @Test
//    public void test_score_stringParse() throws Exception {
//        System.setOut(new PrintStream(outContent));
//
//        String stu = "Tom, 0, 数学: 90, 语文: 90, 英语: 90, 编程: 90";
//        Library scoreSheet = new Library();
//        Student student = scoreSheet.stringParse(stu);
//        System.out.print(student.scoresString());
//        TestCase.assertEquals(systemOut(),"Tom|90|90|90|90|90.0|360");
//    }

//    @Test
//    public void test_menu_list() {
//        Library scoreSheet = new Library();
//        scoreSheet.menuInteraction();
//    }

//    @Test
//    public void testMockClass() throws Exception {
//        // you can mock concrete classes, not only interfaces
//        LinkedList mockedList = mock(LinkedList.class);
//
//        // stubbing appears before the actual execution
//        String value = "first";
//        when(mockedList.get(0)).thenReturn(value);
//
//        assertEquals(mockedList.get(0), value);
//
//    }

}
